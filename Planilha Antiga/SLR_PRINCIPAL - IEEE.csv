Document Title,Title Level,Authors,Publication Title,Publication Year,Start Page,End Page,,>= 4,Abstract,Abstract level,Double-check by Tiago or Paulo,DOI,PDF Link,OBS
Design and realization of the central heating service inspection system based on Open Source Computer Vision Library and Socket Network Programming,0,Jun Cheng; Fenglian Liu,2013 10th International Conference on Fuzzy Systems and Knowledge Discovery (FSKD),2013,914,918,5,1,"As city heating gradually turns to central heating, how to improve the service quality of heating units becomes particularly important. The remote video surveillance system uses portables to keep an eye on heating scene in away. In this paper, we use remote surveillance solutions for the central heating system. And the system realizes real-time inspection of customer service staff. In view of the camera image acquisition and transmission, we proposed a remote monitoring strategy based on Windows XP. We use the Open Source Computer Vision Library (OpenCV) as a base for video capture support. And the Socket Network Programming is used for image data transfer. Experiments show that the strategy is reliable and effective.",,,10.1109/FSKD.2013.6816325,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6816325,
Visualization Tool for Designing Microservices with the Monolith-First Approach,0,R. Nakazawa; T. Ueda; M. Enoki; H. Horii,2018 IEEE Working Conference on Software Visualization (VISSOFT),2018,32,42,11,1,"The microservice architecture is essential for agile development and deployment of the application components; however, designing microservices for a web application is not a straight-forward task. One of the best ways to design microservices is to decompose a monolithic prototype of an application into microservices on the basis of both the complexity in engineering and the component boundaries of the application in the early phase of development. We propose a visualization tool allowing developers to interactively design microservice applications on the basis of the characteristics of source codes and the behaviors of a monolithic prototype. This visualization tool first constructs a calling-context tree from profile data taken in a dry-run of the application. Next, it generates an initial microservice design while considering keyword features in the source codes or amount of function calls between components. Developers can interactively refine this design via this visual interface by taking four-choice actions to revise boundaries of microservices while considering expected communications between them. This interaction will have a significant impact on runtime performance. Case studies of two open-source benchmark applications demonstrate the proposed tool enables interactive design of microservices. The results of the demonstration show that compared to the official microservice designs of the applications, the proposed tool can effectively design microservice applications.",,,10.1109/VISSOFT.2018.00012,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8530129,
Strategies for Agile Software Testing Automation: An Industrial Experience,0,E. Collins; A. Dias-Neto; V. F. d. Lucena Jr.,2012 IEEE 36th Annual Computer Software and Applications Conference Workshops,2012,440,445,6,1,"Testing Automation has been growing in software engineering. Many organizations are investing in automated testing in order to prevent defects and increase testing effectiveness during software development. In agile methodologies, this task is considered an important activity, considered the key of the agile testing. This paper presents three testing automation strategies applied to three different software projects adopting Scrum agile methodology. The results indicated positive agile practices to be considered when adopting testing automation strategy, such as: team collaboration, task distribution, testing tools, knowledge managements. The challenges, results, and lessons learned from this experience are also discussed.",,,10.1109/COMPSACW.2012.84,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6341616,
Towards Understanding the Use of Wiki in Agile Software Development,1,P. Kamthan,2014 28th International Conference on Advanced Information Networking and Applications Workshops,2014,566,571,6,1,"The practice of agile methodologies can lead to the creation, communication, and consumption of different types of knowledge. For appropriate (re)use, there is a need to manage such knowledge effectively. In this paper, a framework comprising of related conceptual models as means for understanding the use of Wiki for managing knowledge in agile software development is proposed. In doing so, Wiki is placed in a larger context of the Social Web environment, illustrative examples are given, and implications of committing to a Wiki are highlighted.",0,,10.1109/WAINA.2014.93,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6844697,
pyDAW: A Pragmatic CLI for Digital Audio Processing,0,P. Hassaballah; M. A. -. Salem; H. Othman,2019 14th International Conference on Computer Engineering and Systems (ICCES),2019,253,258,6,1,"Digital Audio Workstations (DAW) are tools for mastering and mixing audio files, in the broader context of large-scale audio processing. Among many other processes, they allow users to perform advanced processes (e.g. Mastering and Equalization) on audio files and apply a chains of audio effects (e.g. Gain, reverb) using sophisticated GUI. DAWs has proven to be a useful resource for Digital Signal Processing (DSP) tasks, and in particular for music production. While the tools are powerful and stable, utilizing tools that require a certain level of knowledge and background in music production and sound processing can be messy and error prone. We propose a solution that allows batch processing of audio file in a fast and prompt manner carrying out some of the popular digital signal processing techniques. The proposed solution, py DAW, is in the form of an open-source tool for users who cannot afford using DAWs for their cost or complexity. pyDAW is a lean Python Command Line Interface (CLI) that provides a simple interface to complement regular DAWs GUI environments, making it easier to run DAWs functionalities in a batch and simple manner.",,,10.1109/ICCES48960.2019.9068106,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9068106,
When You Have More Satellites than People: The Evolution of CYGNSS Flight Operations,0,R. Medina; J. Redfern; W. Wells; E. Birath; D. Lamb; A. Alexander; T. Ewing,2019 IEEE Aerospace Conference,2019,1,11,11,1,"The flight operations of the Cyclone Global Navigation Satellite System (CYGNSS), a constellation of eight microsatellites built and operated by Southwest Research Institute (SwRI), designed to improve the intensity forecasts of Tropical Cyclones, has seen a litany of changes to its concept of operations, software, processes, and personnel. In this paper, we detail how the operations team responded to several challenges such as the reduction in personnel after the Launch and Early Orbit Operations phase, the addition of a downlink antenna in Japan, high-fidelity collection requests during the unusually active 2017 Atlantic hurricane season, and the increased demands of team members from other projects. These pressures forced the CYGNSS operations team to innovate their way to efficient operations. These innovations were enabled by embracing modern open-source tools such as Django, Bokeh, Git, the various libraries available in the Python programming language, and the capabilities that come with all of our operations engineers being competent in software development. The CYGNSS team took the approach of automating the most time-intensive tasks first, which freed up time to carefully design and test more elaborate automation solutions. We utilized the spirit of the Agile Methodology to make incremental improvements to our software suite which further enabled more sophisticated automation. Finally, we chart a path forward to fully closing the automation loop between our mission planning, and real-time Command and Control.",,,10.1109/AERO.2019.8741926,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8741926,
Design Thinking Paradigm in the Development of an Open Source Strategic Planning Framework,1,J. JÃ¡dan-Guerrero; S. Miranda; Z. Altamirano; J. Manzano,2017 International Conference on Information Systems and Computer Science (INCISCOS),2017,347,352,6,1,"Design Thinking is a paradigm focused on the human being to integrate people, technology and business. This article describes the application of Design Thinking as a methodology of development of an Strategic Planning framework on an open source platform. This approach was born out of necessity of the company Nfoke Solutions Cia. Ltda, in which the main problem was the delay of the strategic analysis in its consulting projects. The framework supports the integration of various services, such as the automatic generation of SWOT matrix and Cambell, Pestle and 5 forces of Porter analysis. The study was carried out to establish the impact of the framework with 20 projects monitored by one year and the satisfaction of 73 customers through a survey. The results revealed an agile development of the framework and the reduction of 70% of the time in analysis processes.",1,,10.1109/INCISCOS.2017.63,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8328130,0
There's Something about Lean: A Case Study,1,L. Bocock; A. Martin,2011 Agile Conference,2011,10,19,10,1,"One of the ideas gaining significant interest at the moment is ""how can we apply Lean manufacturing principles to software development?"" There is however, limited information on how Lean is being used by industry practitioners and if the principles and practices are as effective as current interest levels suggest it might be. We have used a case study to explore the practicalities of how one high-performing, open source team, has adopted Lean practices. We found that the existing meritocratic decision-making culture of the team under study appears to have greatly assisted the team's application of Lean principles to their software development processes.",1,,10.1109/AGILE.2011.44,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6005501,0
Towards Predicting the Impact of Software Changes on Building Activities,0,M. Tufano; H. Sajnani; K. Herzig,2019 IEEE/ACM 41st International Conference on Software Engineering: New Ideas and Emerging Results (ICSE-NIER),2019,49,52,4,1,"The pervasive adoption of Continuous Integration practices - both in industry and open source projects - has led software building to become a daily activity for thousands of developers around the world. Companies such as Microsoft have invested in in-house infrastructures with the goal of optimizing the build process. CloudBuild, a distributed and caching build service developed internally by Microsoft, runs the build process in parallel in the cloud and relies on caching to accelerate builds. This allows for agile development and rapid delivery of software even several times a day. However, moving towards faster builds requires not only improvements on the infrastructure side, but also attention to developers' changes in the software. Surely, architectural decisions and software changes, such as addition of dependencies, can lead to significant build time increase. Yet, estimating the impact of such changes on build time can be challenging when dealing with complex, distributed, and cached build systems. In this paper, we envision a predictive model able to preemptively alert developers on the extent to which their software changes may impact future building activities. In particular, we describe an approach that analyzes the developer's change and predicts (i) whether it impacts (any of) the Longest Critical Path; (ii) may lead to build time increase and its delta; and (iii) the percentage of future builds that might be affected by such change.",,,10.1109/ICSE-NIER.2019.00021,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8805697,
Analyzing Automatic Test Generation Tools for Refactoring Validation,1,I. P. S. C. Silva; E. L. G. Alves; W. L. Andrade,2017 IEEE/ACM 12th International Workshop on Automation of Software Testing (AST),2017,38,44,7,1,"Refactoring edits are very common during agile development. Due to their inherent complexity, refactorings are know to be error prone. In this sense, refactoring edits require validation to check whether no behavior change was introduced. A valid way for validating refactorings is the use of automatically generated regression test suites. However, although popular, it is not certain whether the tools for generating tests (e.g., Randoop and EvoSuite) are in fact suitable in this context. This paper presents an exploratory study that investigated the efficiency of suites generated by automatic tools regarding their capacity of detecting refactoring faults. Our results show that both Randoop and EvoSuite suites missed more than 50% of all injected faults. Moreover, their suites include a great number of tests that could not be run integrally after the edits (obsolete test cases).",0,,10.1109/AST.2017.9,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7962330,
A test automation language framework for behavioral models,1,N. Li; J. Offutt,"2015 IEEE Eighth International Conference on Software Testing, Verification and Validation Workshops (ICSTW)",2015,1,10,10,1,"Model-based testers design tests in terms of models, such as paths in graphs. This results in abstract tests, which have to be converted to concrete tests because the abstract tests use names and events that exist in the model, but not the implementation. Model elements often appear in many abstract tests, so testers write the same redundant code many times. However, many existing model-based testing techniques are very complicated to use in practice, especially in agile software development. Thus, testers usually have to transform abstract tests to concrete tests by hand. This is time-consuming, labor-intensive, and error-prone. This paper presents a language to automate the creation of mappings from abstract tests to concrete tests. Three issues are addressed: (1) creating mappings and generating test values, (2) transforming graphs and using coverage criteria to generate test paths, and (3) solving constraints and generating concrete tests. Based on the language, we developed a test automation language framework. The paper also presents results from an empirical comparison of testers using the framework with manual mapping on 11 open source and 6 example programs. We found that the automated test generation method took 29.6% of the time the manual method took on average, and the manual tests contained 48 errors in which concrete tests did not match their abstract tests while the automatic tests had zero errors.",1,0,10.1109/ICSTW.2015.7107402,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7107402,0
Analyzing open-source and commercial EHR solutions from an international perspective,0,I. de la Torre; B. MartÃ­nez; M. LÃ³pez-Coronado,"2013 IEEE 15th International Conference on e-Health Networking, Applications and Services (Healthcom 2013)",2013,399,403,5,1,"Nowadays the Electronic Health Records (EHRs) systems market has gained importance in healthcare systems. This paper presents an analysis of the level of implementation and the evolution of numerous commercial and open-source EHR systems in use today. We began the review by searching Medline terms such as EHR, â€œcommercial electronic health recordsâ€, â€œopen-source electronic health recordsâ€. We also looked in non-peer-reviewed literature by searching different search engines. Moreover, we identified providers and users from the different solutions and contacted them to obtain more information. The most important international barrier to the adoption of EHR systems is economic resources. The wealthiest countries opt to implement their own EHR systems. The commercial applications that currently have the greatest number of registered users are eclinicalworks, CareTracker and Allscripts Professional, all belonging to U.S. companies. The most commonly used open-source systems are HOSxp, OpenEMR and OpenVistA. The first two are implemented, in general, on the African continent, Latin America and some countries in Asia. The implementation of an international and interoperable EHR platform is difficult to achieve because each country has a different level of development of these systems. Countries with few resources tend to implement open-source software systems and developed countries lean towards commercial EHR systems.",,,10.1109/HealthCom.2013.6720708,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6720708,
"Leveraging scrum principles in collaborative, inter-disciplinary service-learning project courses",1,B. Nejmeh; D. S. Weaver,2014 IEEE Frontiers in Education Conference (FIE) Proceedings,2014,1,6,6,1,"This paper presents two primary results: (1) an adaptation of a Scrum-based, software-tools enabled process used in international service-learning project courses in the Computer and Information Sciences and other disciplines and (2) the software applications resulting from this process. The paper begins with an overview of Scrum and the challenges of applying it in the classroom. We survey the literature regarding adaptations of Scrum in an academic setting. Unlike a number of applications of Scrum in the academy, we applied Scrum in the context of international service-learning courses where we completed software application projects for clients, typically non-profit organizations that needed a system to address some key issue. The challenges encountered with the application of Scrum in a multi-course project setting are discussed along with the adaptations made to address these problems. We summarize some of our successful project results and experiences to date. Finally, we discuss known issues with our approach and future directions of our work, including our interest in partnering with other institutions and in pursuing an open source model for our projects.",0,,10.1109/FIE.2014.7044087,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7044087,
Power converter control framework for agile research and development,1,T. N. Matzen; K. B. Larsen; A. L. JÃ¸rgensen; M. Weje,2014 IEEE Energy Conversion Congress and Exposition (ECCE),2014,513,520,8,1,"In this work a flexible converter control framework is presented for research and agile development of converter control systems. The platform is composed of a controller board and a software development framework. The control platform is distinguished by flexible pheriphals implemented in a FPGA which also contain a converter model for real-time simulation during control and software development. The converter model simulation facilitates continous integration during control software development. Python is the language used in the framework for C++ template code- and header-generation for modules. The framework include a Matlab/Simulink wrapper so dedicated control modules can be developed and tested using a bottom-up approach in the Simulink environment. Test scripts written in Python are used for automated testing of converter behaviour. A build server running the open source Jenkins contionous integration server enables parallel and continous integration engineering, where test scripts are executed automatically every time control software is comitted. An example with a back-to-back converter for a wind turbine application is given, where the converter control platform has been used as a rapid development platform. The developed converter controller implements active grid control and sensorless torque control with field weakening of a permanent magnet synchronous generator. Intense use of converter model simulation and continous integration with automated tests of control behaviour gave a smooth and uncomplicated transition from the simulation environment to the actual converter system, where experimental test bench results showed expected behaviour right from the beginning.",0,,10.1109/ECCE.2014.6953437,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6953437,
Effort Estimation via Text Classification And Autoencoders,1,R. G. F. Soares,2018 International Joint Conference on Neural Networks (IJCNN),2018,1,8,8,1,"The estimation of the effort required for the production of a software or the correction of a software issue is an important activity in software development methodologies. Such estimates are essential to the delivery of high-quality products within a time frame and budget. Intuitively, these estimates should be produced as early as possible in the development process in order to improve planning. Issue reports are the earliest documents available for the correction of a software. We tackle effort estimation in early stages of agile software development as text classification of issue reports. This task consists of assigning categories to such documents, often written in natural language and programming code. Typically, text classification is performed with feature extraction techniques that produce informative features for a text classifier. Autoencoders generate input representations in increasing levels of abstraction, which may represent meaningful semantics in issue reports. We propose a study on the effectiveness of autoencoders for estimating the effort required for the agile correction of software functionalities in the context of real-world open-source projects. Our experiments provided significant evidences that autoencoders are able to encode noisy documents and provide informative features to a text classifier and improve its generalization.",1,,10.1109/IJCNN.2018.8489030,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8489030,0
Towards Requirements Reuse by Implementing Traceability in Agile Development,1,R. Elamin; R. Osman,2017 IEEE 41st Annual Computer Software and Applications Conference (COMPSAC),2017,431,436,6,1,"Requirements reusability within agile development improves software quality and team productivity. One method to implement requirements reusability is traceability, in which relations and dependencies between requirements and artifacts are identified and linked. In this paper, we propose a semiautomated methodology to implement traceability in the agile development process in order to achieve requirements reusability. The main feature of our methodology is the coupling of semi-automated semantic trace generation with the outputs of the agile development process, thus facilitating requirements and artifact reuse. In contrast to previous work, this methodology is specifically designed for practical agile processes and artifacts. Our methodology will be implemented as a component within an existing open source agile tool in order to have minimal impact on the development process. This paper fills a current gap in the area of requirements reusability through traceability and contributes to the limited existing work in agile traceability methodologies.",1,,10.1109/COMPSAC.2017.250,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8029969,0
Innovation Welcome: An Agile Approach to Model-Based Development of Safety-Critical Embedded Systems,1,J. Mills; R. Turin; J. Mangas; S. Ranville,2018 IEEE International Conference on Software Architecture Companion (ICSA-C),2018,152,152,1,0,"From concept to production, intelligent tools are needed to pave the way for stress-free development of complex automotive embedded systems. While automotive products depend more and more on software as the distinguishing feature to achieve a competitive edge, the addition of software features to the overall system functionality comes at a hefty price. As the development times become shorter and shorter, the simultaneous increase in complexity demands diligent partitioning of the software development tasks and ultimately the collaboration of many multi-disciplinary development teams that work in parallel. This leads to a multitude of independently developed software artifacts, each of which will eventually be required to seamlessly integrate into the overall system architecture. Of course, such a seamless integration can ultimately only be achieved if the artifact development follows a very disciplined, if not rigid, development process. However, the more the process is policed, the more the feature engineers will be required to follow procedure and the less they will be able to exploit their creative potential. This is a conundrum that is hard to solve. Rigid development rules are necessary to ensure functional safety, artifact integrity, and consistency throughout the development process. On the other hand, agile development that facilitates product innovation on a functional level is necessary to gain a competitive edge. The two objectives, if viewed within the context of a traditional software development process, are competing objectives and one typically has to be content with a compromise. But what if there is a way to achieve both objectives simultaneously? What if there is a way to delegate the policing to a suite of intelligent development tools that shelter each feature developer when unleashing his/her creative potential? This presentation describes a new, agile, architecture-centric software development paradigm and a companion tool framework that facilitates stress and error-free software development across all stages of a production software development program that is highly agnostic to the specific business rules of an organization.",0,,10.1109/ICSA-C.2018.00045,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8432200,
Improving open source software patch contribution process: methods and tools,1,B. D. Sethanandha,2011 33rd International Conference on Software Engineering (ICSE),2011,1134,1135,2,0,"The patch contribution process (PCP) is very important to the sustainability of OSS projects. Nevertheless, there are several issues on patch contribution in mature OSS projects, which include time consuming process, lost and ignored patches, slow review process. These issues are recognized by researchers and OSS projects, but have not been addressed. In this dissertation, I apply Kanban method to guide process improvement and tools development to reduce PCP cycle time.",1,,10.1145/1985793.1986018,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6032611,
Experience with AOAB methodology in mobile computing module,0,R. Al-azawi; A. Ayesh,2015 International Conference on Open Source Software Computing (OSSCOM),2015,1,6,6,1,"This paper describes a case study of how Agent Oriented Agile Based (AOAB) development methodology was implemented in mobile computing module to create game as a part of the module assessment requirements. Games can be used in higher education in many ways to increase students participation, enable variation in how lectures are taught and to increase students interest when they create their own game. We provide a new game development methodology and integrated with mobile computing module. The experience described in this paper is based on the feedback from the module staff member, students feedback, final student report and finally module evaluation report by students. The evaluation shows that the students who used AOAB methodology provide a better result rather than groups who used Agile game development methodology in game creation. Finally, we describe the benefit of using game in higher education and how we could enhance students progress in their study.",,,10.1109/OSSCOM.2015.7372683,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7372683,
Automatic and Continuous Software Architecture Validation,1,M. Goldstein; I. Segall,2015 IEEE/ACM 37th IEEE International Conference on Software Engineering,2015,59,68,10,1,"Software systems tend to suffer from architectural problems as they are being developed. While modern software development methodologies such as Agile and Dev-Ops suggest different ways of assuring code quality, very little attention is paid to maintaining high quality of the architecture of the evolving systems. By detecting and alerting about violations of the intended software architecture, one can often avoid code-level bad smells such as spaghetti code. Typically, if one wants to reason about the software architecture, the burden of first defining the intended architecture falls on the developer's shoulders. This includes definition of valid and invalid dependencies between software components. However, the developers are seldom familiar with the entire software system, which makes this task difficult, time consuming and error-prone. We propose and implement a solution for automatic detection of architectural violations in software artifacts. The solution, which utilizes a number of predefined and user-defined patterns, does not require prior knowledge of the system or its intended architecture. We propose to leverage this solution as part of the nightly build process used by development teams, thus achieving continuous automatic validation of the system's software architecture. As we show in multiple open-source and proprietary cases, a small set of predefined patterns can detect architectural violations as they are introduced over the course of development, and also capture deterioration in existing architectural problems. By evaluating the tool on relatively large open-source projects, we also validate its scalability and practical applicability to large software systems.",0,,10.1109/ICSE.2015.135,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7202950,
Water Science Software Institute: An open source engagement process,1,S. Ahalt; B. Minsker; M. Tiemann; L. Band; M. Palmer; R. Idaszak; C. Lenhardt; M. Whitton,2013 5th International Workshop on Software Engineering for Computational Science and Engineering (SE-CSE),2013,40,47,8,1,"We have conceptualized a public/private Water Science Software Institute (WSSI) whose mission is â€œto enable and accelerate transformative water science by concurrently transforming both the software culture and the research culture of the water science communityâ€. To achieve our goals, we have applied an Open Community Engagement Process (OCEP), based in large part on the principles and practices of Agile and Open Source software development. This manuscript describes the WSSI and the OCEP model we have developed to operationalize the WSSI.",1,,10.1109/SECSE.2013.6615098,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6615098,0
Towards Next Generation Requirements Engineering,1,T. Fancott; P. Kamthan; N. Shahmir,2012 International Conference on Social Informatics,2012,328,331,4,1,"This paper analyzes the potential of the Mobile Social Web in facilitating the social dimension of agile requirements engineering. In doing so, an agile requirements engineering process (AREP) is presented. AREP consists of a nonlinear sequence of technical activities, each of which is supported by a number of social activities. A compendium of representative examples that illustrate the interplay between activities underlying AREP and Social Web applications is given. The relationships to other software project artifacts, and to open source software (OSS), are highlighted.",1,,10.1109/SocialInformatics.2012.11,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6542458,0
TWINS - This Workflow Is Not Scrum: Agile Process Adaptation for Open Source Software Projects,1,P. T. Robinson; S. Beecham,2019 IEEE/ACM International Conference on Software and System Processes (ICSSP),2019,24,33,10,1,"It is becoming commonplace for companies to contribute to open source software (OSS) projects. At the same time, many software organizations are applying Scrum software development practices, for productivity and quality gains. Scrum calls for self-organizing teams, in which the development team has total control over its development process. However, OSS projects typically have their own processes and standards, which might not mesh well with a company's internal processes, such as Scrum. This paper presents an experience report from Sony Interactive Entertainment (SIE), where the ""toolchain CPU compiler"" team directly participates in the ""LLVM"" OSS project. The team ran into a number of difficulties when using Scrum to manage their development. In particular, the team often failed to complete Scrum sprints where tasks required interaction with the open source community. We look at how the team redefined task flows to alleviate these difficulties, and eventually evolved a highly modified process, dubbed TWINS (This Workflow Is Not Scrum). We assess the revised process, and compare it to other established agile methods, finding it bears a strong resemblance to Scrumban (the SIE team was not aware of Scrumban previously). The TWINS framework presented here may help other organizations who develop software in-house and engage in OSS projects, to gain the best of both worlds.",1,,10.1109/ICSSP.2019.00014,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8812868,0
Visual backlog in agile management tools for rapid software development,1,K. Parveen; F. Munir,2015 International Conference on Open Source Systems & Technologies (ICOSST),2015,84,90,7,1,"Rapid software development demand in software engineering is increasing with passage of time in all fields of life and in all domains of computer. Agile methodology is result of this rapid software demand and it is focusing on how to balance the ratio of developed software according to user demands. This research paper enlightens the agile methodologies and their conversion into the agile project management tools for ease as well as for rapid software development. This versatile use of agile project management tools systems has also posed new ways for analysis, planning and communication in software development. We reviewed current agile management tools on a set of parameters and compared to analyze systems merits and deficiencies. Based on our analysis, we have provided recommendations for error free rapid development. To support our recommendation we added a visual backlog in agile management tools which in return lessen the communication gap between developer and client. As our own future research work, we intend to study agile management tools from human computer interaction perspective.",0,,10.1109/ICOSST.2015.7396407,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7396407,
Specialization for energy efficiency using agile development,1,B. NikoliÄ‡; J. Bachrach; E. Alon; K. AsanoviÄ‡; D. Patterson,2015 Fourth Berkeley Symposium on Energy Efficient Electronic Systems (E3S),2015,1,2,2,0,"Designing hardware specialized for a target application domain dramatically improves energy efficiency. However, the design of specialized hardware is hampered by high cost, dominated by the effort needed to design, validate, and verify the custom integrated circuit. An agile design approach, discussed here, relies on hardware generators coupled with rapid design of iterative prototypes and open source to reduce the cost of hardware specialization.",0,,10.1109/E3S.2015.7336777,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7336777,
Learning to Identify Security-Related Issues Using Convolutional Neural Networks,0,D. N. Palacio; D. McCrystal; K. Moran; C. Bernal-CÃ¡rdenas; D. Poshyvanyk; C. Shenefiel,2019 IEEE International Conference on Software Maintenance and Evolution (ICSME),2019,140,144,5,1,"Software security is becoming a high priority for both large companies and start-ups alike due to the increasing potential for harm that vulnerabilities and breaches carry with them. However, attaining robust security assurance while delivering features requires a precarious balancing act in the context of agile development practices. One path forward to help aid development teams in securing their software products is through the design and development of security-focused automation. Ergo, we present a novel approach, called SecureReqNet, for automatically identifying whether issues in software issue tracking systems describe security-related content. Our approach consists of a two-phase neural net architecture that operates purely on the natural language descriptions of issues. The first phase of our approach learns high dimensional word embeddings from hundreds of thousands of vulnerability descriptions listed in the CVE database and issue descriptions extracted from open source projects. The second phase then utilizes the semantic ontology represented by these embeddings to train a convolutional neural network capable of predicting whether a given issue is security-related. We evaluated SecureReqNet by applying it to identify security-related issues from a dataset of thousands of issues mined from popular projects on GitLab and GitHub. In addition, we also applied our approach to identify security-related requirements from a commercial software project developed by a major telecommunication company. Our preliminary results are encouraging, with SecureReqNet achieving an accuracy of 96% on open source issues and 71.6% on industrial requirements.",,,10.1109/ICSME.2019.00024,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8919098,
From Code to Design: A Reverse Engineering Approach,1,E. Varoy; J. Burrows; J. Sun; S. Manoharan,2016 21st International Conference on Engineering of Complex Computer Systems (ICECCS),2016,181,186,6,1,"Understanding existing pieces of software is a challenge faced by many software developers regardless of their experience. This project researches into existing reverse engineering tools used for code comprehension and identifies the limitations of the current approaches. Furthermore, a prototype implementation was developed to extract design models from available source code in order to achieve better program comprehension. The design and implementation of the model extraction tool were defined, with a focus on Java systems and an agile methodology. This tool was realised by extending the existing open source diagrammatic software, UMLet, with a set of features to aid in code comprehension. Finally, the prototype implementation was evaluated against the related tools in the field as well as by a group of professional experts.",0,,10.1109/ICECCS.2016.030,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7816583,
Studying the Impact of Policy Changes on Bug Handling Performance,1,Z. Abou Khalil,2019 IEEE International Conference on Software Maintenance and Evolution (ICSME),2019,590,594,5,1,"The majority of the software development effort is spent on software maintenance. Bug handling constitutes one of the major software maintenance activities. Earlier studies have empirically investigated various aspects of bug handling, such as bug triaging, bug fixing, and bug process analysis. However, results from previous studies may not be applicable to contemporary agile software development practices.Moreover, these studies did not investigate how changes in the development policies and supporting tools impact the bug handling process. Therefore, our main goal is to investigate the impact of such changes on the bug handling process performance. To do so, we are conducting empirical studies on large and long-lived open source software projects. We report on our current research findings and outline the ongoing Ph.D. research project of the first author.",0,,10.1109/ICSME.2019.00093,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8918977,
"tinyLTE: Lightweight, Ad Hoc Deployable Cellular Network for Vehicular Communication",0,F. Eckermann; P. Gorczak; C. Wietfeld,2018 IEEE 87th Vehicular Technology Conference (VTC Spring),2018,1,5,5,1,"The application of LTE technology has evolved from infrastructure-based deployments in licensed bands to new use cases covering ad hoc, device-to-device communications and unlicensed band operation. Vehicular communication is an emerging field of particular interest for LTE, covering in our understanding both automotive (cars) as well as unmanned aerial vehicles. Existing commercial equipment is designed for infrastructure making it unsuitable for vehicular applications requiring low weight and unlicensed band support (e.g. 5.9 GHz ITS-band). In this work, we present tinyLTE, a system design which provides fully autonomous, multi-purpose and ultra-compact LTE cells by utilizing existing open source eNB and EPC implementations. Due to its small form factor and low weight, the tinyLTE system enables mobile deployment on board of cars and drones as well as smooth integration with existing roadside infrastructure. Additionally, the standalone design allows for systems to be chained in a multi-hop configuration. The paper describes the lean and low-cost design concept and implementation followed by a performance evaluation for single and two-hop configurations at 5.9 GHz. The results from both lab and field experiments validate the feasibility of the tinyLTE approach and demonstrate its potential to even support real-time vehicular applications (e.g. with a lowest average end-to-end latency of around 7 ms in the lab experiment).",,,10.1109/VTCSpring.2018.8417761,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8417761,
Low cost ambient monitoring using ESP8266,0,R. K. Kodali; K. S. Mahesh,2016 2nd International Conference on Contemporary Computing and Informatics (IC3I),2016,779,782,4,1,"A different language is different vision of life. Micropython is the open source scripting language and an interpreter that expresses the concepts in fewer lines of codes. This high level language possesses clear and expressive codes which is designed to respond to the actions. It is a lean and efficient implementation of python 3 programming language that comes with the quick language feedback and is optimized for interactive input to run on microcontroller or embedded systems. This functional and dynamic programming language is ported to ESP8266 board. The DHT11 sensor is interfaced with ESP8266 board to sense the ambient conditions like temperature and humidity. The dht module which is confined to DHT sensor is being imported to perform its programming task. The OLED display used here have dimensions of 128Ã—64, it has an I2C interface and can be driven by SSD1306 driver. Firstly, the library for the SSD1306 driver of the chip needs to be imported. The ESP8266 board have two connections, one with the DHT11 sensor to sense the temperature and humidity, and the second with OLED display to show the collected information of temperature and humidity from DHT11 sensor on to the screen. These all are implemented using lean and efficient Micropython language and thus it is easy to control hardware and connected devices using Micropython.",,,10.1109/IC3I.2016.7918788,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7918788,
ELSA-Py - Open-Source Extension for Communication and Data Management in Interactive Remote Experimentation Under Ilab Shared Architecture,1,T. S. Uhlmann; P. H. Dos Santos Sbais; L. A. Mendes,2018 13th APCA International Conference on Automatic Control and Soft Computing (CONTROLO),2018,247,252,6,1,"Paper depicts an architecture expansion for communication and data management that can be used in Remote Experimentation and Game-Based Learning. This architecture is compliant with iLab Shared Architecture and is based upon open source software and hardware, in particular low cost platforms such as the Raspberry Pi 3. It consists of three main entities: user-side interface, experiment-side (lab) application and, interconnecting both, the cloud server enhanced with the messaging intermediator. Architecture takes into account typical requirements for educational institutions, such as open-source technologies, remote systems usage management (service brokerage) and security. In trial implementations, three single-user, remotely operated experiments have been enabled using ELSA-Py, in which students will be able to practice concepts of lean production (LyMIE), object position control (Windball) and image calibration (TabRecon). The integration has been tested and the performance of ELSA-Py architecture as a tool do deploy educational remotely operated systems is discussed.",0,,10.1109/CONTROLO.2018.8514265,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8514265,
Predicting Release Time for Open Source Software Based on the Generalized Software Reliability Model,1,H. Washizaki; K. Honda; Y. Fukazawa,2015 Agile Conference,2015,76,81,6,1,"There is a significant challenge that how to predict the possible release date of the target software having enough reliability in agile development where incremental development and small software releases are key characteristics. Existing approaches targeting agile development usually use release backlogs for predicting and setting delivery windows, however these do not consider the reliability of software for release date prediction so that there is a possibility that software at the predicted release date have poor reliability. Previously we proposed a generalized software reliability model (GSRM) based on a stochastic process and compared it with other models to evaluate recent software developments. However, we, did not directly evaluate the accuracy of the predicted release time by model. In this paper, towards prediction of release dates in agile development, we focus on the release dates of open source software (OSS) developments and the number of detected issues (faults) since OSS developments comply well with the definition of the agile development in terms of incremental process and frequent releases We define the accuracy of the predicted release time using the given development terms and the number of issues. Additionally, we propose a method to evaluate the accuracy of the predicted release time. In the best case, GSRM shows only 0.572% Error Rate, which corresponds to a predicted release date of two days prior to the actual release date. We believe that our method should be applicable to agile developments too.",1,,10.1109/Agile.2015.19,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7284601,0
The gamification of Dynamic Spectrum Access & cognitive radio,0,P. D. Sutton; L. E. Doyle,2014 IEEE Global Engineering Education Conference (EDUCON),2014,107,113,7,1,"Current wireless research is dominated by the need to satisfy ever-increasing demands for high-speed mobile wireless data. To satisfy these demands, researchers employ flexible, agile software-based radio systems which efficiently use the resources available to them. Dynamic Spectrum Access (DSA) and cognitive radio are key concepts for achieving these research goals. This paper presents Spectrum Wars, a game designed to inform about DSA and cognitive radio but which has also proven to be an effective tool in educating about many of the basic principles of wireless telecommunications. The game pits two teams of players against each other to create and maintain wireless connections in a dynamic environment in order to transfer data as quickly as possible between a transmitter and receiver. Built upon Iris, an open-source framework for software radio, Spectrum Wars is freely available to be recreated, reused, expanded and improved. The paper explains the background of DSA and cognitive radio and gives an overview of the Iris framework. It discusses related work including the MANIAC challenge and the DARPA spectrum challenge before presenting the game itself, examining the feedback of players and exploring the possibilities for future work and improvement.",,,10.1109/EDUCON.2014.6826076,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6826076,
Multi-Perspective Visualization to Assist Code Change Review,1,C. Wang; X. Xie; P. Liang; J. Xuan,2017 24th Asia-Pacific Software Engineering Conference (APSEC),2017,564,569,6,1,"Change-based code review plays an important role in open-source project development. Due to the large amount of human involvement and tight time schedule, tools that can facilitate this activity would be of great help. Current tools mainly focus on difference extraction, code style examination, static analysis, comment and discussion, etc. However, there is little support to change impact analysis for code change review. In this paper, we serve this purpose by providing a change review assistance tool, namely, MultiViewer, for the most popular OSS GitHub. We define metrics to characterize code changes from multiple perspectives. Specifically, these metrics mine coupling relations among related files in the changes, as well as estimate the change effort, risk and impact. Such information is visualized by MultiViewer in two formats. We demonstrate the helpfulness of MultiViewer by showing its ability as indicators to some important project features with real-life case studies.",0,,10.1109/APSEC.2017.66,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8305982,
The Prevalence of code Over Models: Turning it Around with Transparency,1,J. C. Sampaio do Prado Leite,2018 IEEE 8th International Model-Driven Requirements Engineering Workshop (MoDRE),2018,56,57,2,0,"Over the last ten years, there has been an increasing shift in software production from plandriven processes towards lean software processes. These lean processes are based either on agile strategies or in open source environments. One instance of this trend is the growing use of GitHub as a software construction platform. More and more, software developers are relying on text as representation and collaboration as a way of producing quality software. As such, the adoption of more abstract representations (model oriented), as the research community have been forecasting, is yet to happen. Taking a bias position, anchored on the concept of transparency as a quality, we look at the factors for the prevalence of code over models. We try to forecast possible ways to foster the use of models in software production. Our vision is based on bringing transparency to collaborative modeling.",1,,10.1109/MoDRE.2018.00013,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8501494,
Test Code Quality and Its Relation to Issue Handling Performance,1,D. Athanasiou; A. Nugroho; J. Visser; A. Zaidman,IEEE Transactions on Software Engineering,2014,1100,1125,26,1,"Automated testing is a basic principle of agile development. Its benefits include early defect detection, defect causelocalization and removal of fear to apply changes to the code. Therefore, maintaining high quality test code is essential. This study introduces a model that assesses test code quality by combining source code metrics that reflect three main aspects of test codequality: completeness, effectiveness and maintainability. The model is inspired by the Software Quality Model of the SoftwareImprovement Group which aggregates source code metrics into quality ratings based on benchmarking. To validate the model we assess the relation between test code quality, as measured by the model, and issue handling performance. An experiment isconducted in which the test code quality model is applied to $18$ open source systems. The test quality ratings are tested for correlation with issue handling indicators, which are obtained by mining issue repositories. In particular, we study the (1) defect resolution speed, (2) throughput and (3) productivity issue handling metrics. The results reveal a significant positive correlation between test code quality and two out of the three issue handling metrics (throughput and productivity), indicating that good test code quality positively influences issue handling performance.",0,,10.1109/TSE.2014.2342227,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6862882,
Implementation of mobile platform using Qt and OpenCV for image processing applications,0,R. S. Deepthi; S. Sankaraiah,2011 IEEE Conference on Open Systems,2011,284,289,6,1,"The new advancement in technology made mobile phone as smart phone with highly computing capabilities and low processing power. Currently, achieving real-time image processing routines such as convolution, thresholding, edge detection and some of the complex media applications is a challenging tasks embedded in smart phone, because of limited memory. An open software framework, Symbian OS is used in mobile devices to provide a good starting point for developing the multitasking kernel, integrated with communication protocols, data management and graphical user interface for reducing the total development time. To resolve the problems faced by the image processing applications in mobile phones a new application environment was developed. This environment provides the resources available in the operating system which runs on the hardware with complex image processing libraries. This paper presents the capture of an image from the printed media, applied to image processing algorithms to scaling and translation of the image, wipe out the noise, and detect the edges. Then the developed software chops the comics strip along border into individual units, store on the permanent memory and and display on the handset. The application Graphical User Interface was designed using Qt and Visual C++ Integrated Development Environment (IDE) for implementing image processing algorithm using Open Source Computer Vision Library (OpenCv). Many image processing methods pre-processes images, which are Set Region of Interest (ROI) crop, flattening with Gaussian Filter, RGB to Grey scale adaptation, Histogram equalization and Detect Border. This developed software integrated in mobiles by the cross compilation of Qt and the OpenCV software for windows XP Operating system. The result utilized the CANNY method in finding edges of the image using OpenCV. The integrated approach succeeded in mobile phone by detecting the edges, chopping the images to required format of individual units, then stored it using OpenCV and finally displayed on a mobile phone without any loss of image information. The impacts of memory latency, synchronization and the data management overhead are in significant manner.",,,10.1109/ICOS.2011.6079235,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6079235,
"A modern, lean deployment of EHR systems: Two lessons from meaningful use in the United States",0,A. Inoue; D. Zhou,"2016 5th International Conference on Informatics, Electronics and Vision (ICIEV)",2016,1179,1184,6,1,"Electronic Health Record (EHR) Systems dominate healthcare industries in many countries. In the United States, the Obama administration promotes EHR through a significant incentive program, so-called Meaningful Use. This paper shares two important lessons that the majority of stakeholders should have learned as of now, i.e. toward its last phase: (1) significant administrative overhead, and (2) understatement of open source technologies, and proposes a modern, lean deployment of EHR systems with a positive use of open source technologies as a better alternative. We believe that this lean deployment should resolve currently confronting financial and administrative issues while sustaining quality healthcare with its suppressed (or lower) cost.",,,10.1109/ICIEV.2016.7760186,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7760186,
Multi-Objective Iteration Planning in Agile Development,1,W. H. A. Al-Zubaidi; H. K. Dam; M. Choetkiertikul; A. Ghose,2018 25th Asia-Pacific Software Engineering Conference (APSEC),2018,484,493,10,1,"An agile software project typically has a number of iterations (e.g. sprints in Scrum), in each of which the development team designs, implements, tests and delivers a distinct product increment. An important activity in agile development is iteration planning where the team needs to decide what should be done (in terms of issues or user stories) for the upcoming iteration. In this paper, we propose a multi-objective search-based approach to support the team in making such a decision. Our approach employs evolutionary techniques to iteratively generate candidate selections of issues for a given iteration, and search for the optimal selection(s). The search is guided simultaneously by two objectives: maximizing the business value which the team delivers in the iteration while maximizing the alignment with regard to the iteration's original goal. Our evaluation of 233 iterations from six large open source projects demonstrates the effectiveness of our approach.",0,,10.1109/APSEC.2018.00063,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8719453,
Live digital forensics: Windows XP vs Windows 7,0,F. Gianni; F. Solinas,2013 Second International Conference on Informatics & Applications (ICIA),2013,1,6,6,1,"Over the last few years, analysing a computer or a digital device has become a necessity in the field of criminal investigations. Traditional digital forensics analysis includes static analysis, which concerns data that are permanently stored in devices, and live analysis, which regards data that are temporarily stored in equipments or that transit in networks. This paper proposes a live forensics analysis on two different operating systems: Windows XP and Windows Seven. The case study focuses on some common applications such as Skype, Google Talk and the browser Internet Explorer. The last software involves only those cases in which the browser is surfing on Facebook, Yahoo, Hotmail and Gmail. In addition, although many types of applications are payment software, one of the main objectives of this work has been the only use of the free software in order to prove the possibility to obtain the same results minimizing the costs.",,,10.1109/ICoIA.2013.6650220,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6650220,
Workload characterization for microservices,0,T. Ueda; T. Nakaike; M. Ohara,2016 IEEE International Symposium on Workload Characterization (IISWC),2016,1,10,10,1,"The microservice architecture is a new framework to construct a Web service as a collection of small services that communicate with each other. It is becoming increasingly popular because it can accelerate agile software development, deployment, and operation practices. As a result, cloud service providers are expected to host an increasing number of microservices that can generate significant resource pressure on the cloud infrastructure. We want to understand the characteristics of microservice workloads to design an infrastructure optimized for microservices. In this paper, we used Acme Air, an open-source benchmark for Web services, and analyzed the behavior of two versions of the benchmark, microservice and monolithic, for two widely used language runtimes, Node.js and Java. We observed a significant overhead due to the microservice architecture; the performance of the microservice version can be 79.2% lower than the monolithic version on the same hardware configuration. On Node.js, the microservice version consumed 4.22 times more time in the libraries of Node.js than the monolithic version to process one user request. On Java, the microservice version also consumed more time in the application server than the monolithic version. We explain these performance differences from both hardware and software perspectives. We discuss the network virtualization in Docker, an infrastructure for microservices that has nonnegligible impact on performance. These findings give clues to develop optimization techniques in a language runtime and hardware for microservice workloads.",,,10.1109/IISWC.2016.7581269,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7581269,
Teaching an Undergraduate Software Engineering Course using Active Learning and Open Source Projects,1,M. Dorodchi; E. Al-Hossami; M. Nagahisarchoghaei; R. S. Diwadkar; A. Benedict,2019 IEEE Frontiers in Education Conference (FIE),2019,1,5,5,1,"This work in progress presents a model for first undergraduate software engineering course as a core course of the computer science curriculum. The course is designed to be offered in the fourth or fifth semesters (i.e., end of sophomore or beginning of the junior year) for students who have completed the introductory programming and data structures courses. In addition, they may have some basic knowledge of databases and web technologies. Moreover, in our curriculum, students at this level have not been exposed to any codebase of real-world application and particularly of large size (>10,000 lines) codebases yet. Based on such situations, the major focus of this course is on teaching the fundamentals of software engineering as a methodology of developing real-world software with an emphasis on: 1) software systems in the enterprise level, 2) basic modeling using functional, flow, and behavioral diagrams, and 3) team-based agile project development. The paper discusses our novel course configuration of the three emphasized elements above, where students work with open source software in this class as part of course activities and assignments to simulate working on an enterprise project and learn agile development Our observation as well as our industry partners indicated that students enjoy the open source challenges and demonstrate professional competency after this course. Our initial findings include a positive impact of open source and team work on our students.",1,,10.1109/FIE43999.2019.9028517,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9028517,0
Towards the establishment of an agile method for OERs development and delivery,1,M. M. Arimoto; E. F. Barbosa,2013 IEEE Frontiers in Education Conference (FIE),2013,541,547,7,1,"Open Educational Resources (OERs) have been emerged as an important mechanism for democratization of access to education. In fact, the free and open distribution of these resources contributes with the dissemination of knowledge and facilitates the access to information, benefiting the society as a whole. Similar to software, the development of OERs requires the application of appropriate methods and practices to ensure the productivity and quality of the resulting products. Agile methods seem to be an interesting approach in this perspective. However, initiatives to foster the development and delivery of quality and reliable OERs, according to agile principles and with reduced costs, are still incipient. In our work we discuss the establishment of an agile method for the development and delivery of OERs. The proposed method is based on the main characteristics, practices and principles of well-known agile methods for software. To illustrate our ideas, the method is discussed in terms of its application in the development of an OER in the FLOSS (Free / Libre and Open Source Software) domain.",1,,10.1109/FIE.2013.6684882,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6684882,0
Patterns of a cooperative malware analysis workflow,0,D. Plohmann; S. Eschweiler; E. Gerhards-Padilla,2013 5th International Conference on Cyber Conflict (CYCON 2013),2013,1,18,18,1,"In recent years, an ever-increasing number of IT security incidents have been observed, often involving malicious software. In order to cope with the threat posed, it is essential to have a structured analysis workflow for assessment and mitigation. In this paper, we give a thorough explanation of the malware analysis workflow specified and employed by our team of analysts. It was deducted from observed work patterns and best practices with a strong focus on enabling collaboration, i.e. analyses conducted by multiple analysts in parallel in order to achieve a speed-up. The proposed workflow starts at the point where one or more malware samples have already been extracted. It consists of four phases as a whole, each with its own goals, constraints, and abort conditions. The first phase aims at gaining an overview of the current situation and specifying goals of the analysis and their respective priorities. The second phase features a preliminary analysis used to sharpen the picture of the threat, using methods of Open Source Intelligence (OSINT) and automated tools in order to obtain a quick assessment enabling first mitigation. In addition, one objective is to facilitate and prepare a more granular dissection of the malware sample, e.g. by unpacking and deobfuscation. The third phase comprises an in-depth analysis relying heavily on reverse engineering of selected parts of the malware. The selection may be influenced by earlier findings or focus on prominent aspects like nesting, functionality, or communication protocols. The final phase builds upon the results of the preceding phases, leading to tailored mitigation concepts for the specimen analysed. For each of the proposed phases, we give an overview of potential key tools, e.g. helping to gain information or improve collaboration. On a higher level, we highlight challenges to cooperative analysis and our approach to handle them. In this regard, the workflow contains adoptions of principles known from agile software development methodologies. For example, Scrum is used for management of tasks and coordination, aiding the creation of a reproducible and reliable chain of results.",,,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6568385,
Plagiarism detection using free-text fingerprint analysis,0,M. Elkhidir; M. M. Ibrahim; T. A. Khalid; S. Ibrahim; M. Awadalla,2015 World Symposium on Computer Networks and Information Security (WSCNIS),2015,1,4,4,1,"Plagiarism generally defined as using other people's ideas or work and representing it as one's own original work. Free-text plagiarism detection is an application based on analyzing the texts contained in researches, thesis, scientific reports and also literary products, these analyzed data will be used to compare a group of documents to find out how much these documents are similar. This paper proposes a Free Text Plagiarism Detection Software (FTPDS); which is a software tool that uses documents' fingerprints to detect the likelihood that the documents are plagiarized from each other. The system is able to detect plagiarism between two given documents, given document and group of local documents, and between given document and online available documents. Agile software methodology was used to develop the software and some open source libraries were manipulated and used to search the internet and read PDF documents respectively. The speed of the detection process, the inaccurate detection of the same file and the lag of online search and downloading are stated as future work aspects. Source in this paper means the suspected document which we want to detect the amount of plagiarized data contained in it. The target is the document which is probably the document where the author plagiarized the data from it and claimed that he\she owns that data.",,,10.1109/WSCNIS.2015.7368306,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7368306,
SoReady: An Extension of the Test and Defect Coverage-Based Analytics Model for Pull-Based Software Development,0,S. M. Syed-Mohamad; N. S. Md. Akhir,2019 26th Asia-Pacific Software Engineering Conference (APSEC),2019,9,14,6,1,"Pull-based software development is a distributed development model that offers an opportunity to review a pull request before it gets merged into the main repository. A pull request addresses new features, bug fixing, and maintenance issues submitted by both integrators or contributors. It appears that many empirical studies are conducted to discover how pull request evaluation is done, and to our knowledge, limited research exists for assessing release readiness of pull requests. Studies also reported that the failure rate of pull-requests rapidly increases when there are many forks created. It is therefore, questions worth exploring are whether the code review really contributing to the code quality, and how to determine the release readiness of pull requests? In our previous work, test and defect coverage-based analytics model (TDCAM) has been proven to be suitable to determine the readiness of releases for software that is rapidly evolving, in which this is also a characteristic of pull-based software development. In this paper, the TDCAM has been extended to include pull request coverage indicators. The proposed model, namely as SoReady and the visualization analysis presented herein has enabled five developers in a commercial setting to make informed and evidence-based decisions regarding the test status of each pull request and overall reliability of an open source software through a prototype dashboard.",,,10.1109/APSEC48747.2019.00011,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8945520,
Continuous Testing in the Development of IoT Applications,0,L. G. GuÅŸeilÄƒ; D. Bratu; S. Moraru,2019 International Conference on Sensing and Instrumentation in IoT Era (ISSI),2019,1,6,6,1,"Internet-of-Things has evolved with the increased volume of data of interconnecting the physical world to the Internet. Cloud provides the underlying power for IoT to become a disrupting technology, revolutionizing the cloud, as we know it. IoT applications need to adapt frequently and rapidly to new requests. Increasing competition and rapidly changing market needs require from nowadays companies' flexibility and fast time to market of their products. To achieve these goals more and more organizations are relying on new IT technologies and software development processes. Though there are many publications around DevOps as a methodology and the use of a process for continuous integration and continuous development, there are fewer solutions provided which incorporate a software delivery pipeline incorporating all processes: continuous business planning, agile development, continuous integration, continuous deployment and continuous testing. The paper proposes a DevOps architecture and agile tools to be used in the implementation of a fully integrated DevOps pipeline based on open-source. Furthermore, continuous testing is covering test best practices and methods, which along with the DevOps pipeline can be widely implemented in any cloud environment, regardless of the cloud provider chosen.",,,10.1109/ISSI47111.2019.9043692,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9043692,
Learning scrum by doing real-life projects,1,M. Villavicencio; E. NarvÃ¡ez; E. Izquierdo; J. Pincay,2017 IEEE Global Engineering Education Conference (EDUCON),2017,1450,1456,7,1,"Being Scrum the agile software development framework most commonly used in the software industry, its applicability is attracting great attention to the academia. That is why this topic is quite often included in computer science and related university programs. In this article, we present a course design of a Software Engineering course where an educational framework and an open-source agile project management tool were used to develop real-life projects by undergraduate students. During the course, continuous guidance was given by the teaching staff to facilitate the students' learning of Scrum. Results indicate that students find it easy to use the open-source tool and helpful to apply Scrum to a real-life project. However, the unavailability of the client and conflicts among the team members have negative impact on the realization of projects. The guidance given to students along the course helped identify five common issues faced by students through the learning process.",1,,10.1109/EDUCON.2017.7943039,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7943039,0
SFRAT â€“ An Extendable Software Reliability Assessment Tool,1,A. Nikora; L. Fiondella; T. Wandji,2018 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),2018,65,70,6,1,"Since its release in the mid-1990s, the Microsoft Windows-based software reliability modeling tool CASRE has been downloaded over 3000 times from the Open Channel Foundation's website. It was also included on the CDROM distributed with the Handbook of Software Reliability Engineering (M. Lyu, ed). In the years since it was first released, however, CASRE has become more difficult to use. This is mainly because there have been no updates since 2000. The last version of Windows on which CASRE would reliably execute was Windows XP, and since it was developed explicitly for Windows, it is not feasible to run it on other platforms. Software development and acquisition organizations continued to be interested in using tools of the same type as CASRE. In 2013, the U.S. Naval Air Systems Command (NAVAIR) contacted the authors at the Jet Propulsion Laboratory and the University of Massachusetts to determine whether a) CASRE could be modified to run in contemporary environments, or b) whether a new tool with the same functionality as CASRE could be developed with modern programming languages and techniques. After weighing the alternatives, a decision was made to develop a new tool rather than updating CASRE. There were several reasons for which this decision was made. First of all, CASRE had been developed with the programming languages available at the time, in this case C and Fortran. Developing a new tool would allow use of modern, expressive languages and development environments that were particularly well suited to the statistical modeling domain (e.g., R, RStudio). Developing a new tool would also allow us to implement it so that it would run in modern operating environments, specifically Windows, Mac OS, Unix, and Linux. This last design decision would make it possible for users who would not have been able to run CASRE to use the new tool. We wanted to address the difficulty of adding new models to CASRE, since it was not architected for ease of modification. We wanted to develop a tool for which it would be easy to add new models and model evaluation techniques (e.g., prequential likelihood ratio, Akaike Information Criterion). This would enable organizations already using software reliability modeling to manage their testing to place the models they were using into a common framework, making it easier to evaluate multiple sets of results to gain additional insight into their testing process. Researchers would also gain an advantage by having a common framework in which to work with multiple models, analyze their results, and identify relationships among them. Finally, this would make it practical to distribute as open-source software, to which contributors could add new models and evaluation techniques as they were developed by the research community and validated by practitioners. We have used these ideas to develop the Software Failure and Reliability Assessment Tool (SFRAT). It is implemented in R, uses the Shiny user interface package, and will run in any environment in which R and RStudio can run. We intend for it to be an open-source tool with a mechanism for contributors to add new capabilities. Our hope is that distributing SFRAT as open-source software will allow it to retain currency in the software reliability practice and research communities.",0,,10.1109/ISSREW.2018.00-29,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8539165,
Educational trends in software engineering: a systematic review study,0,N. D. Acosta; M. B. Garcia; J. B. Romero; A. L. Sevillano; N. F. Paez; O. Roa,2019 Congreso Internacional de InnovaciÃ³n y Tendencias en Ingenieria (CONIITI ),2019,1,4,4,1,"Although there is an updated knowledge's body in software engineering, even so the curricular guides must be updated periodically. This article presents a systematic review study, which addresses the need to provide suggestions regarding the issues that should be emphasized in the area of software engineering in the systems and computer engineering program at the Catholic University of Colombia. 20 themes were identified, presented in 855 selected studies and which are studied in 50 articles, at a minimum. The most studied topic is related to software design (91.5%), followed by software development in (58%), testing and software quality in (55.5%), open source software in (33.5%), software architecture (23%), web technologies (22%), agile methodologies (18.5%), software project management (16%), software development processes (12%)), C & C ++ programming language (11%), programming languages, object-oriented programming and graphical user interface (10%), Java programming language (9%), prototype-based software development in (8.5%), requirements, standards and computer-aided software engineering in (8%), mobile software and cloud services in a (7%). The results indicate the top 20 of the essential topics in a curriculum of the software engineering area.",,,10.1109/CONIITI48476.2019.8960866,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8960866,
Prioritizing and optimizing risk factors in agile software development,1,R. Agrawal; D. Singh; A. Sharma,2016 Ninth International Conference on Contemporary Computing (IC3),2016,1,7,7,1,"To ensure success and quality of a software, early identification and prioritization of the risk is necessary. Risk impacts the cost and duration for of a software. As agile practices of software development prevail over traditional software development, so they are used in present scenario. This paper proposes an Agile based Risk Rank (AR-Rank) method for the prioritization of risk factors in agile software development. To reduce the impact of risks, the proposed method provides precedence ranking of risk factors from high to low. Therefore, the goal of proposed method is to provide minimum risk-free software on time with varying degree of flexibility. For optimization of risk factors, the Particle Swarm Optimization (PSO) is applied as an iterative approach. The proposal is compared proposed with various prevalent approaches as proposed in past.",0,,10.1109/IC3.2016.7880232,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7880232,
Highly scalable model for tests execution in cloud environments,0,B. P. Gopularam; C. B. Yogeesha; P. Periasamy,2012 18th International Conference on Advanced Computing and Communications (ADCOM),2012,54,58,5,1,"Cloud computing works on various service models like SaaS, PaaS, IaaS. The enterprises outsource data and computation to cloud and benefit from cloud computing unique attributes like abundant storage, network and compute. This paradigm also brings forth many challenges for data security and access control. Many organizations are choosing Cloud platforms for software development/testing, particularly teams based on agile software development need faster software integration. As cloud turns out to be cost-effective and performance intensive it remains as obvious choice for organizations. In this paper we provide an efficient model for software testing which leverages cloud environment and supports rigorous requirements of agile development model viz., continuous build integration and we provide an approach to run automation testcases easily (particularly User Interface automation testcases). The regression tests developed as part of software lifecycle can be executed either on-demand or selectively based on tags provided. The proposed model scales well to accommodate any number of testcases can be run flexibly. Surprisingly our model input is a single CSV (comma separated file) with test case information. The proposed model takes care of automatic segregation of the testcases into test suites and then executes them individually either parallel or serially based on configuration. We rely on Jenkins tool (an open source build management tool) for creating required jobs and scheduling. The proposed model of Tests execution is extremely useful in high demanding agile environments where feature development is many times faster than traditional water fall model. The approach also takes advantage of virtualized environment for tests execution compared to traditional hardware.",,,10.1109/ADCOM.2012.6563584,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6563584,
"Mother and children health reporting system: Innovative information system application in the rural West Bandung Area, Indonesia, by using multimodal communications systems",0,A. Faried; A. B. Sutiono; T. Djuwantono; M. Z. Arifin; F. F. Wirakusumah; S. A. Yuniarto; H. Hariyanto; Y. T. Jayadi,"2015 4th International Conference on Instrumentation, Communications, Information Technology, and Biomedical Engineering (ICICI-BME)",2015,202,207,6,1,"Objectives: Digitalization of maternal and post-natal care system (DigiMAPS) is a system consist of electronic medical record for mother and children health (KIA) also for tele-consultation facility called â€œTele-Obgynâ€. Our project focuses on the development of KIA Online and a cloud computing-based video conferencing as a basis of Tele-Obgyn platform. The web-based network allows online access not only among primary health care but also between government and private institution. DigiMAPS platform is designed to meet the needs of database management and its interphase with other services that are responsible for data acquisition and visualization. Methods: DigiMAPS combines the open-source flexible system design that benefits for implementation and development needs as well as support for mobile devices to enable high quality of patient care. The system has been developed gradually following lean-innovation management concept which focuses on customer-problem-solution matching with rapid prototyping and validation from idea to solution. There was significant effort to establish a close relationship and learning process with prospective users of DigiMAPS, hence in the broader perspective we used a participatory research approach. DigiMAPS act as central-portal and -data base in the communication information system (ICT), designed to compile patient report paperless and equipped with tele-consultation. Results: DigiMAPS developed for a variety of administrative processes. This system will simplify the work process and can be integrated with primary health care system, Health Department and the Ministry of Health. A good ICT will be useful in collecting clinical information than conventional paper-based reporting system and to minimize errors in the reporting chain. Conclusions: By using lean innovation management, several inputs are gathered from prospective users including health authority, head of local clinics, midwifes, obgyn doctors, and public health staffs. Our system may bridging gap between clinical needs and digital documentation, telemedicine-monitoring and improve the quality of patient care, facilitate communication within both the scope of the internal (primary health care) and external (stakeholders and follow-up), increasing productivity and reduce overall expenses.",,,10.1109/ICICI-BME.2015.7401363,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7401363,
Encryption and decryption implementation in Java based on Poco libraries,0,W. Fei; L. Ming; H. Fangming,2011 International Conference on Electrical and Control Engineering,2011,3020,3023,4,1,"The conventional Java based method of data encryption and decryption exists such problems as low efficiency and complicated programming. To resolve these problems, an efficient implementation which combines the third-party open source Poco library with JNI is proposed in this paper. Developers can create their C++ function library using Poco and finally generate a dynamic link library file, then Java will call the needed functions by mean of JNI. The implementation is highly portable and available on many different operation systems and has passed the testing on Windows XP as well as Ubuntu. Different implementations are compared in efficiency, the result shows that the performance improves significantly.",,,10.1109/ICECENG.2011.6057988,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6057988,
Open-Source Innovation in Practice: A Lean-Based Development Process Leveraging Open-Source Big Data Tools,1,S. Alonso; M. Viana; E. Cirilo; P. Alencar; C. Lucena,2019 IEEE International Conference on Big Data (Big Data),2019,4662,4671,10,1,"Innovation depends on the exploitation of market potential with products that are aligned with customer needs. However, building innovative products is becoming gradually more challenging because of increased market volatility, uncertainty, complexity and ambiguity. In our Innovation Lab, inside an e-Procurement Company, we encountered several challenges when implementing an innovation process to develop an initial unstructured data processing Minimum Viable Product (MVP) based on opensource big data tools: (i) raising and prioritizing user demands; (ii) deciding about adequate tools; and (iii) understanding how to promptly set up a viable product. In this paper, we share our open-source innovation experience in bringing novel solutions to an oil company's suppliers. In general, we present and discuss how we have been applying our innovation process to create MVPs, and which technical decision helped us accelerate the MVP development in the presence of a large-scale, unstructured database and open-source big data tools. Overall, we believe the proposed lean-based development process can help practitioners and researchers who want to understand and improve their knowledge about lean products, how to build MVPs, and advance open-source innovation involving big data tools.",1,,10.1109/BigData47090.2019.9006516,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9006516,0
Agility and Quality Attributes in Open Source Software Projects Release Practices,1,A. C. B. G. d. Silva; G. de Figueiredo Carneiro; A. C. Marcelino de Paula; M. P. Monteiro; F. B. e. Abreu,2016 10th International Conference on the Quality of Information and Communications Technology (QUATIC),2016,107,112,6,1,"Context: The need to accelerate software delivery, supporting faster time-to-market and frequent community developers/ users feedback are issues that have lead to relevant changes in software development practices. Many Open Source Software (OSS) projects have engaged to achieve this through the adoption of agile practices in software release practices. Problem: There is no secondary study in the literature discussing evidences of the influence of agile approaches in OSS projects release practices. Goal: Identify published reports in the literature that characterize to which extent agility has influenced release approaches in OSS projects. Method: The characterization of studies followed a fivephase process to present a panoramic view of software releases practices in the context of OSS projects. Results: The overall data collected from 14 studies published from January 2006 to January 2016 depicted the following scenario: nine issues that characterize the advantages/influence of agility in OSS release approaches; four challenge issues in this approach; three possibilities of implementation and two main motivations towards the adoption of software release approaches through agility; and finally three main strategies to implement it. Conclusion: This study provides an up-to-date and structured understanding of the influence of agility on OSS projects release approaches based on findings systematically collected from a list of relevant references in the last decade.",1,,10.1109/QUATIC.2016.029,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7814526,review
"A review of smart TV: Past, present, and future",0,I. Alam; S. Khusro; M. Naeem,2017 International Conference on Open Source Systems & Technologies (ICOSST),2017,35,41,7,1,"Smart TV has changed the legacy TV system by providing capabilities of processing and internet connectivity. The amalgamation of TV with processing and internet connectivity has not only attracted the viewers but opened new avenues for researchers as well. In contrast to legacy TV system, smart TV provides better environment for watching TV contents along with online clips, movies, games, browsing, and full support for web 2.0 features. However, connectivity with a public network (internet) brings further challenges and research opportunities, discussed herein. Smart TV is more interactive; however, maintaining smart TV as a lean back device is an issue that needs further research in the field of Human Computer Interaction (HCI). The hybrid nature of smart TV provides more contents for watching; however, this creates the problems of content and cognitive overload. The large Ultra High Definition (UHD) screen, full support for internal and external sensors, and growing operating systems make this device a central hub for smart homes. However, these capabilities make a smart TV more capable of capturing private data. In this paper, we have analyzed the smart TVs from both hardware and software perspectives. Moreover, this paper presents a study of issues and challenges faced by smart TV viewers, which includes the issues related to interactivity, content overloading, privacy, and security.",,,10.1109/ICOSST.2017.8279002,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8279002,
A developemnt model of units of learning for multiple platforms,0,F. K. de Oliveira; A. S. Gomes,2015 10th Iberian Conference on Information Systems and Technologies (CISTI),2015,1,6,6,1,"The need to ensure flexibility, compatibility, interoperability and reduce costs of production and maintenance of resources can be obtained with the use of internationally recognised specifications as Sharable Content Object Reference Model (SCORM), IEEE Learning Object Metadata (IEEE LOM) or Instructional Management System-Learning Design (IMS-LD). In this way, the research aims to verify whether a development model of Units of learning (UoL) based on open source online tools for authoring and execution of UoLs, that meet the criteria of usability and without deep knowledge of programming language by developers provide effectively increased implementation or the re-use of UAs complete or parts in different Electronic Learning Systems (ELS). For this, we intend to conduct a survey of authoring tools or editors and players to perform an analysis of competitors in order to identify the potential, general operating characteristics. Thus, to perform the surveys will be used as collection instruments: questionnaires and interviews with samples from groups of users and developers of educational content. Already the evaluations of the tool developed will be carried out by groups of users that include samples of all those in potential, in order to ensure the production of reusable content. Therefore, it is expected that the authoring tool and your player can assist in the development of UoLs for different ELS from a lean and simple semantics, which facilitates and ensures interoperability, changes, adjustments, maintenance and reuse of the UoLs.",,,10.1109/CISTI.2015.7170481,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7170481,
RapidRelease - A Dataset of Projects and Issues on Github with Rapid Releases,0,S. D. Joshi; S. Chimalakonda,2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR),2019,587,591,5,1,"In the recent years, there has been a surge in the adoption of agile development model and continuous integration (CI) in software development. Recent trends have reduced average release cycle lengths to as low as 1-2 weeks, leading to an extensive number of studies in release engineering. Open-source development (OSD) has also witnessed a rapid increase in release rates, however, no large dataset of open-source projects exists which features high release rates. In this paper, we introduce the RapidRelease dataset, a data showcase of high release frequency open-source projects. The dataset hosts 994 projects from Github, with over 2 million issue reports. To the best of our knowledge, this is the first dataset that can facilitate researchers to empirically study release engineering and agile software development in open-source projects with rapid releases.",,,10.1109/MSR.2019.00088,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8816794,
Supporting Agile Teams with a Test Analytics Platform: A Case Study,1,O. Liechti; J. Pasquier; R. Reis,2017 IEEE/ACM 12th International Workshop on Automation of Software Testing (AST),2017,9,15,7,1,"Continuous improvement, feedback mechanisms and automated testing are cornerstones of agile methods. We introduce the concept of test analytics, which brings these three practices together. We illustrate the concept with an industrial case study and describe the experiments run by a team who had set a goal for itself to get better at testing. Beyond technical aspects, we explain how these experiments have changed the mindset and the behaviour of the team members. We then present an open source test analytics platform, later developed to share the positive learnings with the community. We describe the platform features and architecture and explain how it can be easily put to use. Before the conclusions, we explain how test analytics fits in the broader context of software analytics and present our ideas for future work.",1,,10.1109/AST.2017.3,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7962325,0
Using Lehman's laws to validate the software evolution of agile projects,1,G. Kour; P. Singh,2016 International Conference on Computational Techniques in Information and Communication Technologies (ICCTICT),2016,90,96,7,1,"The main focus in software system engineering involves problems associated with upgrading, migrating and evolving existing software system systems. Software evolution is a continuous process which includes activities like software improvement, adaptation and correction that arise after the operational release of the software. Most of the empirical research on software evolution has been conducted using software developed using traditional development methods. We perform an empirical study to validate the evolution of software systems built with agile development methodology. A set of product and process metrics were evaluated for one open source software application and two industrial agile projects. The metric data was used to validate the evolution of agile projects within the context of Lehman's laws of software evolution. Our study shows that Lehman's laws of software evolution are supported by the agile software systems.",1,,10.1109/ICCTICT.2016.7514558,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7514558,0
Exploring Virtual Reality as an Integrated Development Environment for Cyber-Physical Systems,0,T. Mikkonen; K. Kemell; P. Kettunen; P. Abrahamsson,2019 45th Euromicro Conference on Software Engineering and Advanced Applications (SEAA),2019,121,125,5,1,"Cyber Physical Systems (CPS) development approaches tend to start from the physical (hardware) perspective, and the software is the final element in the process. However, this approach is unfit for the more software-intensive world that is increasingly iterative, connected, and constantly online. Many constraints prevent the application of iterative, incremental, and agile development methodologies, which now are the norm for many other fields of software. Time-consuming system validation can only start when both hardware and software components are ready, which implies that the software delivery and quality is almost always the final bottleneck in the CPS development and integration. Also organizational issues raise concerns - CPS development teams are nowadays often geographically distributed, which can result in delays in the process, shortcomings, and even mistakes. In this paper, we propose using our envisioned open-source Virtual Reality-based Integrated software Development Environment (VRIDE) for developing the next generation, increasingly software-intensive CPSs in efficient ways.",,,10.1109/SEAA.2019.00027,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8906706,
How Does Contributors' Involvement Influence the Build Status of an Open-Source Software Project?,1,M. RebouÃ§as; R. O. Santos; G. Pinto; F. Castor,2017 IEEE/ACM 14th International Conference on Mining Software Repositories (MSR),2017,475,478,4,1,"The recent introduction of the pull-based development model promoted agile development practices such as Code Reviews and Continuous Integration (CI). CI, in particular, is currently a standard development practice in open-source software (OSS) projects. Although it is well-known that OSS contributors have different involvements (e.g., while some developers drive the project, there is a long tail of peripheral developers), little is known about how the contributor's degree of participation can influence the build status of an OSS project. Through TravisTorrent's dataset, we compare the success rates of builds made by casual and non-casual contributors and what factors on their contributions may influence the build result. Our results suggest that there is no representative difference between their build success (they are similar in 85% of the analyzed projects), meaning that being a casual contributor is not a strong indicator for creating failing builds. Also, factors like the size of their contributions and the number of project configurations (jobs) have the potential of impacting the build success.",1,,10.1109/MSR.2017.32,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7962400,0
Bulut Ãœzerinde DevOps Mimarisi DevOps Architecture in the Cloud,0,Y. Demiral; N. Ã‡arkacÄ±; U. Ã‡ekmez,2019 27th Signal Processing and Communications Applications Conference (SIU),2019,1,4,4,1,"Developing technology and information systems have gained a great place in our lives and the importance of scalable software, cloud computing and distributed architectures has increased. With these developments, the necessity of providing seamless service of development and operational processes, monitoring and auto-management of these complex architectures has born. Thus, the DevOps concept aiming to conduct both software projects in an automatic & seamless way and cooperation between the developer teams has emerged. In recent years, conducting DevOps pipeline consisting of software planning, coding, compilation, versioning, testing, publishing and managing have been implemented on cloud technologies to create better performance and fault tolerant structure. In this study, agile development, continuous integration and gradual operation of delivery processes for containerized technologies are implemented and evaluated on OpenStack, one of the private open source cloud infrastructures, with respect to DevOps principles.",,,10.1109/SIU.2019.8806433,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8806433,
Are There Any Unit Tests? An Empirical Study on Unit Testing in Open Source Python Projects,1,F. Trautsch; J. Grabowski,"2017 IEEE International Conference on Software Testing, Verification and Validation (ICST)",2017,207,218,12,1,"Unit testing is an essential practice in Extreme Programming (XP) and Test-driven Development (TDD) and used in many software lifecycle models. Additionally, a lot of literature deals with this topic. Therefore, it can be expected that it is widely used among developers. Despite its importance, there is no empirical study which investigates, whether unit tests are used by developers in real life projects at all. This paper presents such a study, where we collected and analyzed data from over 70K revisions of 10 different Python projects. Based on two different definitions of unit testing, we calculated the actual number of unit tests and compared it with the expected number (as inferred from the intentions of the developers), had a look at the mocking behavior of developers, and at the evolution of the number of unit tests. Our main findings show, (i) that developers believe that they are developing more unit tests than they actually do, (ii) most projects have a very small amount of unit tests, (iii) developers make use of mocks, but these do not have a significant influence on the number of unit tests, (iv) four different patterns for the evolution of the number of unit tests could be detected, and (v) the used unit test definition has an influence on the results.",0,,10.1109/ICST.2017.26,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7927976,
An open source adaptive user interface for network monitoring,1,S. W. Kortschot; D. Sovilj; H. Soh; G. A. Jamieson; S. Sanner; C. Carrasco; S. Ralph; S. Langevin,"2017 IEEE International Conference on Systems, Man, and Cybernetics (SMC)",2017,1535,1539,5,1,"Decision support systems for network security represent a critical element in the safe operation of computer networks. Unfortunately, due to their complexity, it can be difficult to implement and empirically assess novel techniques for displaying networks. This paper details an open source adaptive user interface that hopes to fill this gap. This system supports agile development and offers a wide latitude for human factors and machine learning design modifications. The intent of this system is to serve as an experimental testbed for determining the efficacy of different human factors and machine learning initiatives on operator performance in network monitoring.",0,,10.1109/SMC.2017.8122832,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8122832,
Agile Challenges and Chances for Open Source: Lessons Learned from Managing a FLOSS Project,1,M. MÃ¼ller,2018 IEEE Conference on Open Systems (ICOS),2018,1,6,6,1,"Open source projects got an important part today's software landscape. Thousands of these projects are collaboratively driven by communities following a shared vision. But governing open communities towards this shared vision comes along with various difficulties. In general, agile methods allow to manage such systems of collaborative development and constant change. But as this work shows, the agile approach not only provides chances in open settings. A variety of challenges occur that need to be considered. The case of Catrobat, a Free/Libre Open Source project, shows that although open source development and agile methods evolved over the last years, the dynamics of open communities still challenge the agile way. However, evaluating and understanding these dynamics, as well as introducing agile elements, such as the role of product owners, can be beneficial for managing open systems and to drive it into a common direction together with the contributors.",1,,10.1109/ICOS.2018.8632819,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8632819,0
How a structured testbed enables the rapid development and deployment of cloud services: The VISION Cloud use case,0,M. Villari; F. Longo; M. Paone; F. Tusa; M. C. Jaeger,2012 IEEE Symposium on Computers and Communications (ISCC),2012,820,826,7,1,"The right setup of a testbed is important for enabling the rapid development and deployment of cloud services, in particular all the times the testbed hosts more concurrent interactions. This work shows how to configure an environment where more developers insist on it. In particular what tools are indispensable for managing compelling distributed cloud environments. We looked at mature Open Source solutions, performing their smoothed integration. The paper describes all parts necessary for accomplishing complex scenarios, even in a bounded perimeter as the VISION Cloud EU project offering. VISION Cloud represents the reference architecture dealing with Cloud Storage, and our work attempts to provide solutions applied on VISION, but suitable for any type of framework.",,,10.1109/ISCC.2012.6249402,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6249402,
The Patch-Flow Method for Measuring Inner Source Collaboration,0,M. Capraro; M. Dorner; D. Riehle,2018 IEEE/ACM 15th International Conference on Mining Software Repositories (MSR),2018,515,525,11,1,"Inner source (IS) is the use of open source software development (SD) practices and the establishment of an open source-like culture within an organization. IS enables and requires developers to collaborate more than traditional SD methods such as plan-driven or agile development. To better understand IS, researchers and practitioners need to measure IS collaboration. However, there is no method yet for doing so. In this paper, we present a method for measuring IS collaboration by measuring the patch-flow within an organization. Patch-flow is the flow of code contributions across organizational boundaries such as project, organizational unit, or profit center boundaries. We evaluate our patch-flow measurement method using case study research with a software developing multi-industry company. By applying the method in the case organization, we evaluate its relevance and viability and discuss its usefulness. We found that about half (47.9%) of all code contributions constitute patch-flow between organizational units, almost all (42.2%) being between organizational units working on different products. Such significant patch-flow indicates high relevance of the patch-flow phenomenon and hence the method presented in this paper. Our patch-flow measurement method is the first of its kind to measure and quantify IS collaboration. It can serve as a base for further quantitative analyses of IS collaboration.",,,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8595235,
Teaching a globally distributed project course using Scrum practices,1,D. Damian; C. Lassenius; M. Paasivaara; A. Borici; A. SchrÃ¶ter,2012 Second International Workshop on Collaborative Teaching of Globally Distributed Software Development (CTGDSD),2012,30,34,5,1,"This paper describes the goals, design and initial challenges encountered in teaching a globally distributed software development course in collaboration between the University of Victoria, Canada and Aalto University, Finland. The project-driven collaboration course involved 16 students in Canada and nine students in Finland, divided into three globally distributed Scrum teams working on the same project. The teams worked on extending Agilefant, an open-source backlog management system, in direct interaction with its product owner. The collaborative development is based on the Scrum methodology. We describe how the Scrum methodology was implemented, and adapted to work in a distributed environment, as well as the infrastructure used to support collaboration, e.g. local war-rooms, and multiple communication tools. We conclude the paper with describing initial challenges encountered, including cultural, semester, course and curriculum differences, as well as technical and time-zone issues.",0,,10.1109/CTGDSD.2012.6226947,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6226947,
Agile software development technological implementation: Apache struts suitability,1,A. Shrivastava; P. M. Khan,2015 2nd International Conference on Computing for Sustainable Global Development (INDIACom),2015,1101,1103,3,0,"Agile methodologies can be classified up into two parallel ways of implementation. One is the functional approach, which relates to the organizational behavior towards the project and the team, other is the technological implementation of the agile methodologies. This article focus on how those technological implementations are achievable with apache struts, an open source Java web framework.",1,,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7100418,
RE4CH: Requirements Engineering for Connected Health,0,P. Barbosa; J. Queiroz; D. Santos; A. Figueiredo; F. Leite; K. Galdino,2018 IEEE 31st International Symposium on Computer-Based Medical Systems (CBMS),2018,292,297,6,1,"Health information systems are increasing in quantity and complexity. In this sense, projects of health information systems, which are well-fitted for agile, start to face new challenges imposed by regulators, society and suppliers since they start to interact with medical devices. The problem is that the development of medical device software presents requirements that normally are not addressed by agile methodologies. In this paper, we present RE4CH (Requirement Engineering for Connected Health), an agile process focused on the health regulation viewpoint. We introduce its activities and show its application in an open source case study. Choosing to focus on traceability, we take an important step in compliance following agile practices for open source software that is highly regulated and safety-critical.",,,10.1109/CBMS.2018.00058,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8417253,
Software Test Automation practices in agile development environment: An industry experience report,1,E. F. Collins; V. F. de Lucena,2012 7th International Workshop on Automation of Software Test (AST),2012,57,63,7,1,"The increased importance of Test Automation in software engineering is very evident considering the number of companies investing in automated testing tools nowadays, with the main aim of preventing defects during the development process. Test Automation is considered an essential activity for agile methodologies being the key to speed up the quality assurance process. This paper presents empirical observations and the challenges of a test team new to agile practices and Test Automation using open source testing tools integrated in software projects that use the Scrum methodology. The results obtained showed some important issues to be discussed and the Test Automation practices collected based on the experiences and lessons learned.",0,,10.1109/IWAST.2012.6228991,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6228991,
Predicting Delivery Capability in Iterative Software Development,1,M. Choetkiertikul; H. K. Dam; T. Tran; A. Ghose; J. Grundy,IEEE Transactions on Software Engineering,2018,551,573,23,1,"Iterative software development has become widely practiced in industry. Since modern software projects require fast, incremental delivery for every iteration of software development, it is essential to monitor the execution of an iteration, and foresee a capability to deliver quality products as the iteration progresses. This paper presents a novel, data-driven approach to providing automated support for project managers and other decision makers in predicting delivery capability for an ongoing iteration. Our approach leverages a history of project iterations and associated issues, and in particular, we extract characteristics of previous iterations and their issues in the form of features. In addition, our approach characterizes an iteration using a novel combination of techniques including feature aggregation statistics, automatic feature learning using the Bag-of-Words approach, and graph-based complexity measures. An extensive evaluation of the technique on five large open source projects demonstrates that our predictive models outperform three common baseline methods in Normalized Mean Absolute Error and are highly accurate in predicting the outcome of an ongoing iteration.",0,,10.1109/TSE.2017.2693989,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7898472,
An electrical impedance tomography (EIT) multi-electrode needle-probe device for local assessment of heterogeneous tissue impeditivity,0,D. Meroni; C. C. Maglioli; D. Bovio; F. G. Greco; A. Aliverti,2017 39th Annual International Conference of the IEEE Engineering in Medicine and Biology Society (EMBC),2017,1385,1388,4,1,"Electrical Impedance Tomography (EIT) is an image reconstruction technique applied in medicine for the electrical imaging of living tissues. In literature there is the evidence that a large resistivity variation related to the differences of the human tissues exists. As a result of this interest for the electrical characterization of the biological samples, recently the attention is also focused on the identification and characterization of the human tissue, by studying the homogeneity of its structure. An 8 electrodes needle-probe device has been developed with the intent of identifying the structural inhomogeneities under the surface layers. Ex-vivo impeditivity measurements, by placing the needle-probe in 5 different patterns of fat and lean porcine tissue, were performed, and impeditivity maps were obtained by EIDORS open source software for image reconstruction in electrical impedance. The values composing the maps have been analyzed, pointing out a good tissue discrimination, and the conformity with the real images. We conclude that this device is able to perform impeditivity maps matching to reality for position and orientation. In all the five patterns presented is possible to identify and replicate correctly the heterogeneous tissue under test. This new procedure can be helpful to the medical staff to completely characterize the biological sample, in different unclear situations.",,,10.1109/EMBC.2017.8037091,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8037091,
Enhancing the Performance of Software Development Virtual Teams through the Use of Agile Methods: A Pilot Study,1,S. Nevo; I. Chengalur-Smith,2011 44th Hawaii International Conference on System Sciences,2011,1,10,10,1,"This paper develops a conceptual model that explicates the role of synchronous communication media in enabling - directly and indirectly, via social presence - virtual software development teams to adopt and apply Agile methods. In turn, Agile methods, as well as perceived social presence, are theorized to have a positive impact on communication convergence and transactive memory. Ultimately, these outcomes are formulated as direct antecedents of virtual team performance. A pilot study of 40 Free/Libre Open Source Software (FLOSS) teams provides preliminary supporting evidence for the conceptual model.",1,,10.1109/HICSS.2011.186,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5718463,0
A Tale of CI Build Failures: An Open Source and a Financial Organization Perspective,1,C. Vassallo; G. Schermann; F. Zampetti; D. Romano; P. Leitner; A. Zaidman; M. Di Penta; S. Panichella,2017 IEEE International Conference on Software Maintenance and Evolution (ICSME),2017,183,193,11,1,"Continuous Integration (CI) and Continuous Delivery (CD) are widespread in both industrial and open-source software (OSS) projects. Recent research characterized build failures in CI and identified factors potentially correlated to them. However, most observations and findings of previous work are exclusively based on OSS projects or data from a single industrial organization. This paper provides a first attempt to compare the CI processes and occurrences of build failures in 349 Java OSS projects and 418 projects from a financial organization, ING Nederland. Through the analysis of 34,182 failing builds (26% of the total number of observed builds), we derived a taxonomy of failures that affect the observed CI processes. Using cluster analysis, we observed that in some cases OSS and ING projects share similar build failure patterns (e.g., few compilation failures as compared to frequent testing failures), while in other cases completely different patterns emerge. In short, we explain how OSS and ING CI processes exhibit commonalities, yet are substantially different in their design and in the failures they report.",0,,10.1109/ICSME.2017.67,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8094420,
A systematic mapping study on practical approaches to teaching software engineering,0,M. R. Marques; A. Quispe; S. F. Ochoa,2014 IEEE Frontiers in Education Conference (FIE) Proceedings,2014,1,8,8,1,"Background: Software engineering is a core subject in computing education. Today, there seems to be a consensus that teaching software engineering requires students to perform practical experiences that simulate the work in the software industry. This represents a challenge for universities and instructors, because these experiences are complex to setup and involve considerable time and effort. Although there are several experiences and proposals reported in the literature, there is no clear solution to address this challenge. Aim: Being knowledgeable about the several approaches reported in the literature for dealing with this challenge is the first step to proposing a new solution. Counting on this knowledge allows instructors to reuse lessons learned from other universities. In order to address this challenge, we conducted a systematic mapping study that intends to answer the following questions: What are the main approaches used to address the practical experiences in software engineering education? Is there an emerging tendency to address this challenge? Which software process models are used to support the practical experiences in software engineering courses? Have the universities changed the way of conducting these experiences over the years? What are the main forums to seek information on practical approaches for teaching software engineering? Method: We used a systematic mapping study to identify and classify available research papers that report the use of practical experiences in software engineering education. Results: There were 173 papers selected, analyzed and classified. The results indicate that universities have realized the value of including practical experiences as part of the software engineering teaching process. However, few proposals indicate how to address that challenge. The practical approaches identified in this study were game learning, case studies, simulation, inverted classrooms, maintenance projects, service learning, and open source development. Only one recent report on the use of traditional approaches (i.e., teaching using expositive lectures) was found. The use of a development process to support these practical experiences seems not to be a concern for software engineering instructors. Only 40% of these studies report the use of a development process to guide the process experience. The reported processes are mainly agile methods. Conferences are the most used forum to publish studies in this area (72%). One third of these studies have been published over the last five years. Conclusion: There is a clear concern for teaching software engineering involving practical experiences, and there are several initiatives exploring how to do it. The map gives us an overview of the different proposals to address this challenge, and also allows us to make some preliminary conclusions about the preferred approaches.",,,10.1109/FIE.2014.7044277,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7044277,
Automatic generation of TestNG tests cases from UML sequence diagrams in Scrum process,1,M. Elallaoui; K. Nafil; R. Touahni,2016 4th IEEE International Colloquium on Information Science and Technology (CiSt),2016,65,70,6,1,"Software testing is an important step in the life cycle of agile development, it represents an efficient way to ensure the good functioning of the product. In previous work, we implemented an algorithm that takes as input user stories, and automatically generate UML sequence diagrams. In this work, these UML sequence diagrams are automatically transformed using model to model transformation then model to text transformation. This transformation, which can be applied to obtain test cases, is implemented with AndroMDA, an open source MDA Framework.",0,,10.1109/CIST.2016.7804972,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7804972,
Teaching developer skills in the first software engineering course,0,V. Rajlich,2013 35th International Conference on Software Engineering (ICSE),2013,1109,1116,8,1,"Both employers and graduate schools expect computer science graduates to be able to work as developers on software projects. Software engineering courses present the opportunity in the curriculum to learn the relevant skills. This paper presents our experience from Wayne State University and reviews challenges and constraints that we faced while trying to teach these skills. In our first software engineering course, we teach the iterative software development that includes practices of software change, summarized in the phased model of software change. The required resources for our software engineering course are comparable to the other computer science courses. The students - while working in teams - are graded based on their individual contribution to the team effort rather than on the work of the other team members, which improves the fairness of the grading and considerably lessens the stress for the best students in the course. Our students have expressed a high level of satisfaction, and in a survey, they indicated that the skills that they learned in the course are highly applicable to their careers.",,,10.1109/ICSE.2013.6606661,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6606661,
EPISODE: An Extreme Programming Method for Innovative Software Based on Systems Design,0,T. Goto; K. Tsuchida; T. Nishino,2014 IIAI 3rd International Conference on Advanced Applied Informatics,2014,780,784,5,1,"In software development, the waterfall model is commonly used, especially for large-scale software systems. For smaller-scale software development, agile software development approaches such as extreme programming or scrum are used. Traditional software development methodologies are mainly targeted toward customer-centric development, and therefore, new software methodologies are often not well received in the industry. In this study, we propose a new software development methodology that is aimed at developing innovative software using artificial intelligence (AI), idea creation, value engineering, and systems design. The name of our method is named as EPISODE (Extreme Programming method for Innovative Software based on systems DEsign). EPISODE supports the efficient and creative development of open source software (OSS) by small groups.",,,10.1109/IIAI-AAI.2014.157,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6913401,
"Design-Computational Thinking, Transfer and Flavors of Reuse: Scaffolds to Information and Data Science for Sustainable Systems in Smart Cities",0,C. Lee; K. D. Wong,2018 IEEE International Conference on Information Reuse and Integration (IRI),2018,225,228,4,1,"This paper investigates how to increase understanding of design and sustainable systems by scaffolding cognitive access and transfer of learning using eclectic approaches to experiment with networks of design potentials. Cognitive access simulates multi-criteria case indexing, refined from knowledge induction derived from analyses of random but related cases based on search strategies. Randomization of the search space encourages emergence of heuristic solutions, fuzzy though informed transfers and further refinement of schema. We investigate the type of navigational structures/design resulting from creative reuse/refactoring and lean management; and whether there will be evidences of knowledge induction from randomized search scaffolded by Case-based Reasoning (CBR), which leads to heuristic transfer and learning. Examples from two courses carried out August-December 2017 within the participatory design-agile framework for engagement in Smart Cities are assessed for creative reuse regarding: a) people, process and tools; b) domain engineering; c) component mining and d) open source vs. systematic reuse. Findings confirm longitudinal insights: CBR-informed but emergent search leading to more efficient and higher quality heuristic transfer and learning is scaffolded by systemic modelling and design dependent on four factors.",,,10.1109/IRI.2018.00040,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8424711,
A more cost-effective unattended ground sensor using commercial off-the-shelf products,0,K. A. Hempenius; R. A. Wilson; M. J. Kumar; N. Hosseini; M. E. Cordovez; M. S. Sherriff,2012 IEEE Systems and Information Engineering Design Symposium,2012,62,67,6,1,"The military is increasingly using sensors as part of its battlefield strategy. Sensors can be used as an alternative to placing soldiers in dangerous situations and the information that sensors collect helps leaders make better decisions. However, the cost of integrating these sensors into existing tactical networks has been a limiting factor in their adoption. Thus, the research team sought to use Android smartphones and Arduino microcontrollers, two commercial off-the-shelf (COTS) technologies, to create an inexpensive, ""plug-and-play"" interface to help relieve this issue. This interface was then demonstrated through the creation of a series of unattended ground vehicles (UGVs) that can be networked together in an ad-hoc wireless mesh network to collect sensor data from across an operational area. This project was broken down into two phases and the Agile development methodology was used throughout. During the first phase an interface between the Android phone and Arduino microcontroller was created and then integrated with sensors. During the second phase a robotics platform, path setting algorithm, and the ad-hoc wireless mesh network were developed. Collectively, this project demonstrated the feasibility of using open-source, commercially available parts to create unattended ground sensor (UGS) networks, thereby providing an alternative to current market offerings which are custom and proprietary in nature and therefore expensive and difficult to upgrade.",,,10.1109/SIEDS.2012.6215148,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6215148,
[Title page i],0,,2015 Agile Conference,2015,i,i,#VALUE!,#VALUE!,The following topics are dealt with: agile software development; visual management; software project development; open source software; generalised software reliability model; agile portfolio management; and IoT business model development.,,,10.1109/Agile.2015.1,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7284586,
[Title page i],0,,2016 49th Hawaii International Conference on System Sciences (HICSS),2016,i,i,#VALUE!,#VALUE!,The following topics are dealt with: collaboration systems; learning technologies; teaching technologies; information systems technology; communication technology; disaster management; crisis management; team creativity; organizational creativity; cross-border IS/IT collaboration; cross-organizational IS/IT collaboration; data science; innovation; social networking services; distributed group decision-making; global virtual teams; task-centered assistance systems; human-centered assistance systems; human-computer interaction; information design; mobility-enhanced social collaborations; value creation; team collaboration; serious games; gamification; collaboration research; social media; e-Business transformation; e-Health; mobile value services; service science; systems sciences; sustainability decision technologies; Big Data analytics; Internet of Things; Web mining; text mining; data mining; business analytics; smart city government; e-Society services; ICT-enabled services; digital service innovations; open phenomena; humanitarian operations research; intelligent decision support; supply chain management; logistics; interactive visual decision analytics; multi-criteria decision analysis; service analytics; smart service systems; soft computing; streaming data analytics; systemic financial risk analytics; collective intelligence; network analysis; digital media; social computing; electric energy systems; renewable generation; distributed generation; power system monitoring; power system control; power system protection; resilient networks; electronic government; Big and Linked Data; BOLD; cybersecurity; information and communication technologies; human development; social justice; digital government; healthcare; global health IT strategies; health behavior change support systems; IT architectures; learning health systems; mobile applications; clinical decision-making; healthy aging technologies; user experience design; Internet; digital economy; crowdfunding; electronic marketing; IS cross-cultural issues; behavioral IS security; privacy; Web content analysis; Web content usage; online games; game-like systems; social shopping; Internet of Everything; cloud computing; knowledge innovation; entrepreneurial systems; knowledge systems; socio-political legitimization; knowledge economics; knowledge flows; knowledge transfer; knowledge sharing; knowledge exchange; knowledge management; knowledge society; organizational learning; ecosystems decision support; enterprise architecture; human capital; business operations; information systems procurement; project management; IT management; open source application software; business intelligence; organizational information technologies; agile; lean; cybercrimes; cyberwarfare; defensive software technologies; offensive software technologies; digital forensics; parallel computing; software product lines; and wireless networks.,,,10.1109/HICSS.2016.1,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7427175,
,,,,,,,,,,,,,,
,,,,,,,,,,,,,,
,,,,,,,,,,,,,,
,elimina,total,,,,,,,,,,,,
Total sem filtro ,-,83,,,,,,,,,,,,
Filtro 1 => n>4,83,0,,,,,,,,,,,,
Filtro 2 => title,-45,45,,,,,,,,,,,,
Filtro 3 => abstract,23,22,Final até agora,,,,,,,,,,,
Filtro 4 => double-check,,,,,,,,,,,,,,
,,,,,,,,,,,,,,
,,,,,,,,,,,,,,
LEGENDA,QUANTIDADE,,,,,,,,,,,,,
BASE PROF. PAULO,1,,,,,,,,,,,,,
ECONTRADOS NA SCOPUS,,,,,,,,,,,,,,
ENCONTRADOS NA IEEE,0,,,,,,,,,,,,,
ENCONTRADOS NA ACM ,4,,,,,,,,,,,,,
ENCONTRADOS NA SPRINGER,,,,,,,,,,,,,,
,,,,,,,,,,,,,,
REPETIDOS DENTRO DA PRÓPRIA BASE,,,,,,,,,,,,,,